16 July: successful test flight in manual, stabilized and auto (waypoints) mode
	Addiction aircraft with production sample UDB5 and 3DR LEA6 GPS module using
	the same options.h settings as AVC, but with race mode off
	* need to reduce elevator boost and auto mode bank angle
	* logfile apparently corrupt; check mavlink baud rate

17 July: copied from -udb5-mw to configure bench testing with em406

19 July: began testing 64mips option
	*** note that analog2digital_udb4/5 are hard-coded for 16mips
	fixed bug in mpu.c: incorrect oscillator setting for 32MIPS

21 July: 40 MIPS support for UDB5 working, fixed ADC support for UDB5 (it was burning
	about 10% of the cpu at all speeds) now set to sample at ~25KHz regardless
	of FCY frequency.
	Tested udb5 at 16, 32 and 40MIPS: 8%, 4% and 3% cpu load, respectively.

	new project auav3-em406 copied from udb5-em406, symbol AUAV3 defined and mcu changed
	turned off NVRAM and I2C1 driver in nv_memory_options.h since auav3 has no eeprom
	changed ADC driver to sample at 25KHz instead of 500KHz
	* appears to be working correctly at 16MIPS, but not at 32 or 64
	* at 32mips, IMU works correctly for a brief period but usually fails while still
	  in acquiringS state
	* cpu load 11% at 16mips, 3% higher than udb5

22 July:
	validated new version of analog2digital_auav3.c with 25KHz sample rate
	* MAVlink now reporting ACSP1 CSV (battery voltage) correctly in millivolts

23 July:
	project auav3-mtek copied from auav3-em406
	modified cpu load measurement to use 32 bit timer 8/9 when USE_MCU_IDLE==1
	tested with USE_MCU_IDLE==1 at:
	70MIPS: load 2.6%
	64MIPS: load 2.9%	2.6 * (70/64) = 2.84
	16MIPS: load 11.4%	2.5 * (70/16) = 11.38

2 August:
	tested with USE_MAVLINK_DBGIO and USE_RING_BUFFER: cpu load 3.6%

3 August:
	bench test MPU6000 synchronous IMU updates with HEARTBEAT_HZ = 200, with
	mavlink packet writes to ring buffer at IPL6
	created new project Polaris-auav3

4 August:
	maidened Polaris Ultra at Long Lake. Trim fairly good. Stabilization gains seem
	OK, nav. gains too low.

8 August: increased nav. roll authority to about 45 degrees of bank and increased
	roll_elev_mix to 1.0

1 July 2014: copied from Polaris-auav3
    porting S.bus input function from project MPQauav2_alpha1 in MatrixPilotMulti branch
    S.bus input working with OrangeRX 7 channel
    set up relative waypoints for 100x50m pattern at 30m altitude

3 July: getting close to first test flight with fbw on roll axis
    only aileron navigation is enabled, but yawkp_aileron is increased to 0.5
    changed back to mavlink telemetry
    changed waypoints.h to relative origin for walk test
    Flight test: roll axis stabilization works; rollkp is not too high
    needed to scale up manual input to increase effectiveness in stabilize mode
    Waypoint following did not work correctly; log indicates flight directly away
    from WP1, and it looks like the sign of navigation deflection was flipped in
    adding the roll setpoint logic.

5 July: enabled magnetometer; auto-alignment is enabled
    telemetry type set to mavlink
    waypoints file is west field lefthand pattern with relative origin
    RTL point is 30m north of init point at 30m altitude with flag F_LOITER;
        throttle will come on when throttle hold (failsafe) is activated on DX7

7 July: manually determined magnetometer offsets and disabled auto-alignment

9 July: configured waypoints.h to drop ball at runway center

11 July: good ball drop accuracy at west field with modest roll angles.

12 July: single flight test with larger roll angles; Cub had trouble dealing with the
	wind. Need to retest on calmer day. Earth magnetic vector displayed in GE
	is much improved with new calibration; should improve further with r3240.

15 July: change options.h to define FIXED_TRIMPOINTS

16 July: use mavlink raw sensor data log to calculate MPU6000 offsets
	and define PRE_CALIBRATED in options.h

19 July: magnetometer broken by enabling barometer: thought I had fixed this problem
	a year ago...
	Auto flight was very erratic and I was unable to find the bomb; release point
	was far to the north of the runway.
	Analysis of the flight log shows release point GPS coordinates 270' north of the runway.

20 July: disabled barometer and verified that magnetometer is working using 900MHz Xbees
	Noted some servo jitter dependent on location of onboard Xbee antenna.
	Performed range check and RC signal seemed solid beyond 120 feet; no indication
	of a range problem. Must change MAVLINK_BAUD to 57600 to use XBees. Changed back
	to 115200 for next test flight with OpenLog instead of XBees.
	Found bomb using the GPS flightpath; bomb was directly on the recorded flightpath,
	indicating that the LEA6 was doing a good job.
	The Cub flew much better with the barometer disabled,
	Analysis of log LEA6_mag0.RAW indicates the GPS path is more accurate than the
	IMU path; impact point of bomb is within a meter laterally of the GPS path,
	but about 6 meters away from the IMU path.
	Definitely should give preference to the GPS heading when flying waypoints.

21 July: modify options.h to test NavsparkGL module; looks flyable
	flight test showed that both heading and COG are broken

22 July: drive test indicates both heading and COG now working properly with NavsparkGL

24 July: set up Cub-auav3 for NavsparkGL and pitch fbw tests

25 July: NavsparkGL altitude seems to be erratic and too low. Location accuracy looks
	OK, but IMU path diverges from GPS more than with LEA6. flan.py indicates LEA6
	data arriving at 4Hz, but shows Navspark data arriving at irregular 2Hz intervals.
	Set up options.h to test new yaw control mode with increased gains for roll,yaw KP.
	Also increased roll KD gain. Still need to find problem with NavsparkGL reporting
	frequency.

	TODO: implement a "panic" mode to mimic the E-flite AS3X feature. Try using just
	accel vector and yaw rate using standard stall recovery procedure: force lateral accel
	to zero with elevator and ailerons neutral, then use elevator and ailerons to force
	accel vector (anti)parallel to body frame Z. See if this procedure is stable, or
	can get trapped in a local minimum.

1 August: Log 2445 is the first Cub log with full fbw logic. This felt very good in
	stabilized mode, with YAW_STABILIZATION_RUDDER enabled, with yawCntrl.c using
	rudder to maintain a roll angle setpoint with ROLLKP_RUDDER=0.1. (note that
	YAW_STABILIZATION_RUDDER is	a misnomer with this logic, since rudder is stabilizing roll, not yaw)

3 August: Set options.h to define DISABLE_CENTRIPETAL_COMP and undefine TEST_ACCX_STABILIZATION
	to test theory that E-flite AS3X is just a 6DOF complementary filter
	based AHRS. Switching from manual to stabilized mode should be similar to
	entering "panic" mode on AS3X. Try entering stabilized mode when inverted and
	in a coordinated turn to test.

10 August: Testing DISABLE_CENTRIPETAL_COMP:
	Regarding the expected magnitude of the effect of coordinated turns:
	since the roll/pitch drift integration time constant is on the order of 10 seconds (correct?)
	a turn must be sustained roughly 10 seconds to observe 1/e times the average value
	of reference vector displacement. That displacement is
	atan(lateral acceleration / g) = 45 degrees for 1g lateral accel.
	So, if my arithmetic is correct, I'll be looking for an error magnitude of 17 degrees
	after a 10 second turn with 1g lateral acceleration. To achieve 1g lateral acceleration
	with the Cub flying about 13 m/sec, turn radius needs to be about 17 meters,
	and yaw rate would be about 45 deg/sec with a full circle taking 8.3 seconds.
	So, if I can fly the Cub through several 360s at 45 deg/sec (about 7x standard rate)
	the log should show >17 degrees less than the actual bank angle at the end of the
	sequence, and switching to stabilize should result in the same magnitude error
	from level, with error decaying by 1/e every 10 seconds.
    See log 212: flew steep left circles in manual for at least 30 sec, leveled
    then switched to stabilize; no apparent roll error. Check to see if there was
    a lot of skidding going on.
    Test flight: stabilization rudder mix seems to be backwards, try taking it out and see
    whether stabilized turns look more coordinated
    Bomb drop run was off to the north and nav about the turns not as good as it
    could be.
    Next flight: log215? turn centrip. comp. back on and do another bomb drop, also
    turn yaw stab off to see if the skid tendency goes away in stabilize.
	Bomb drop was very accurate this time; right on the runway.

2 September: verified that YAW_STABILIZATION_RUDDER fights turns by applying rudder
	in the opposite direction of roll angle. This was probably the main cause of
	navigation error in the bad bomb run. Will need to test with YAW_STABILIZATION_RUDDER
	off and DISABLE_CENTRIPETAL_COMP redefined to see if nav is accurate without
	centrip. accel. comp.
	Refactored YAW_STABILIZATION_RUDDER to ROLL_CONTROL_RUDDER, and fixed error in
	yawCntrl.c (was using yaw_setpoint where roll_setpoint was intended). Rudder
	now acts to maintain roll_setpoint when ROLL_CONTROL_RUDDER is 1. Since the
	roll_setpoint is determined by the nav logic when in auto mode, this should
	increase turn authority in auto.

6 September: Cub test flight indicates that ROLL_CONTROL_RUDDER is behaving as desired.
	Turns seem to be the same in both directions. Need to see if this helps the Polaris
	trim problem.
	Problem today with IMU altitude estimate: large divergence from GPS altitude,
	apparently developed while sitting on the ground. Change initialization procedure
	to eliminate delay between power-up and takeoff; TODO: look into eliminating the divergence
	problem.

7 September: modified yawCntrl.c to maintain lateral acceleration at zero (keep the
	"ball" centered). Bench test looks OK on Cub.

8 Sep: navigation good; check log for lateral accel.
    no manual yaw available in stabilize; rudder ineffective
    Appears that recovery to level is delayed; check for attitude error vs. correct
    minimization of slip/skid

11 September 2014:
	revised yawCntrl.c to ignore manual rudder input and cancel lateral acceleration
	when in auto mode, but to mix in manual input in stabilization mode.
	Disable mag yaw drift correction (MAG_YAW_ENABLE) in options.h

16 September 2014:
    Autonomous mode rudder control calls for yaw rate proportional to lateral acceleration.
	Current negative sign results in right rudder when banked left. The left bank
    results in x acceleration toward the right wingtip in a static ground test.
	If this were an uncoordinated turn, that x acceleration would imply that we were
	skidding out of the turn, and there is a need for left rudder, not right, so
	flip the sign of the feedback and try again.

21 September 2014: field notes: first flight with yaw_rate=xacc large overshoot in auto mode, reduced on second
	flight with yaw_rate = xacc/4, but seemed to turn wrong direction for xwind leg
	3rd flight; yaw_rate = xacc/16: bomb drop indicates no apparent lag in GPS

23 Septermber 2014:
	turn off cross tracking in waypoints.h. Last 3 waypoints are 10m AGL
	Use channel 7 (hover throttle rocker) to toggle xacc nulling with rudder
	UP (above center) manual rudder in manual/stab, xacc null in auto
	DOWN (4 clicks below center) xacc null in manual/stab, manual in auto

2 October 2014:
	modified FBW roll/pitch controls to rate-based proportional feedback
	Tuned xaccel feedback using SILsim and PT60 airframe; amount of feedback
	is very small to avoid oscillation. This control is currently PD feedback
	of xaccel to rudder; probably would benefit from a change to controlling
	yaw rate with rate demand a function of xaccel. Currently no lowpass filter
	on xaccel in this version of code, but that would only reduce the system
	bandwidth further. It may be that yaw damping is the best way to keep
	xaccel near zero, but attempts to tune yawkd_rudder haven't improved
	performance much. Simply mixing aileron into rudder to counter adverse
	yaw may be the optimal approach.
	Check crosstrack margin, height_margin, racing mode and racing throttle parameters
	to improve Cub waypoint tracking.

8 October 2014:
	Successful WP flights without cross-tracking. Good accuracy on hitting WPs
	and bomb release. No obvious dithering between waypoints. FBW controls were
	controlling roll/pitch rates to maintain angle setpoints. Xaccel feedback
	was on in 1st and 3rd flights, sign was wrong on 2nd flight, but feedback
	was turned off before W2 (GE labeling). Wrong sign caused wide turn, missing
	W1.